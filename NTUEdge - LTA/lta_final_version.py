# -*- coding: utf-8 -*-
"""LTA final version.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ci0XXQgjFqZMDWmC3XnZ7J-0akroIOUW

#Packages
"""

!pip install requests

pip install ruptures

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sb
import scipy.fftpack
from scipy.fft import fft, fftfreq
import ruptures as rpt
import datetime

from sklearn import model_selection
from sklearn import metrics
from sklearn.model_selection import train_test_split
from sklearn.model_selection import cross_val_score
from sklearn.model_selection import GridSearchCV
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import classification_report, confusion_matrix
from sklearn.metrics import accuracy_score
from sklearn.metrics import precision_score
from sklearn.metrics import recall_score
from sklearn.metrics import f1_score
from sklearn.tree import export_graphviz
from sklearn.utils import shuffle

from sklearn.metrics import silhouette_samples, silhouette_score
import matplotlib.cm as cm

from subprocess import call
from IPython.display import Image

import keras
from keras.models import Sequential
from keras.layers import Dense
from keras.layers.normalization import BatchNormalization
from keras import backend

import tensorflow as tf

#Import all csv files from github
import requests
url='https://raw.githubusercontent.com/kaiyang7766/ExploratoryDataAnalysis/main/Load_Data/LoadData.py'
r=requests.get(url)
with open('LoadData.py','w') as f:
  f.write(r.text)

import LoadData as LD
#List of dataframes imported:
bukitPanjangToExpo_s6edge=LD.bukitPanjangToExpo_s6edge
bukitPanjangToExpo_iphone12pro=LD.bukitPanjangToExpo_iphone12pro
woodlandNorthToWoodlandSouth_s6edge=LD.woodlandNorthToWoodlandSouth_s6edge
woodlandNorthToWoodlandSouth_iphone12pro=LD.woodlandNorthToWoodlandSouth_iphone12pro
harbourFrontToPunggol_s6edge=LD.harbourFrontToPunggol_s6edge
harbourFrontToPunggol_iphone12pro=LD.purple
harbourfrontToDhobyGhautToMarinaBay_s6edge=LD.harbourfrontToDhobyGhautToMarinaBay_s6edge
harbourfrontToDhobyGhautToMarinaBay_iphone11=LD.harbourfrontToDhobyGhautToMarinaBay_iphone11

#Import all functions from github
url='https://raw.githubusercontent.com/kaiyang7766/ExploratoryDataAnalysis/main/Load_Data/LoadFunctions.py'
r=requests.get(url)
with open('LoadFunctions.py','w') as f:
  f.write(r.text)

from LoadFunctions import *

DT_Stations = ['DT1_Bukit_Panjang', 'DT2_Cashew', 'DT3_Hillview','DT5_Beauty_World', 'DT6_King_Albert_Park', 'DT7_Sixth_Avenue', 'DT8_Tan_Kah_Kee', 'DT9_Botanic_Gardens', 'DT10_Stevens','DT11_Newton','DT12_Little_India','DT13_Rochor','DT14_Bugis', 'DT15_Promenade','DT16_Bayfront','DT17_Downtown','DT18_Telok Ayer','DT19_Chinatown','DT20_Fort_Canning','DT21_Bencoolen','DT22_Jalan_Besar','DT23_Bendemeer','DT24_Geylang_Bahru','DT25_Mattar','DT26_MacPherson','DT27_Ubi','DT28_Kaki_Bukit','DT29_Bedok_North','DT30_Bedok_Reservoir','DT31_Tampines_West','DT32_Tampines','DT33_Tempines_East','DT34_Upper_Changi','DT35_Expo']
TE_Stations=['TE1_Woodlands_North','TE2_Woodlands','TE3_Woodlands_South']
NE_Stations=['NE1_HarbourFront','NE3_Outram_Park','NE4_Chinatown','NE5_Clarke_Quay','NE6_Dhoby_Ghaut','NE7_Little_India','NE8_Farrer_Park','NE9_Boon_Keng','NE10_Potong_Pasir','NE11_Woodleigh','NE12_Serangoon','NE13_Kovan','NE14_Hougang','NE15_Buangkok','NE16_Sengkang','NE17_Punggol']
Circle_Stations=['CC29_HarbourFront','CC28_Telok_Blangah','CC27_Labrador_Park','CC26_Pasir_Panjang','CC25_Haw_Par_Villa','CC24_Kent_Ridge','CC23_one-north','CC22_Buona_Vista','CC21_Holland_Village','CC20_Farrer_Road','CC19_Botanic_Gardens','CC17_Caldecott','CC16_Marymount','CC15_Bishan','CC14_Lorong_Chuan','CC13_Serangoon','CC12_Bartley','CC11_Tai_Seng','CC10_MacPherson','CC9_Paya_Lebar','CC8_Dakota','CC7_Mountbatten','CC6_Stadium','CC5_Nicoll_Highway','CC4_Promenade','CC3_Esplanade','CC2_Bras_Basah','CC1_Dhoby_Ghaut','CC2_Bras_Basah','CC3_Esplanade','CC4_Promenade','CE1_Bayfront','CE2_Marina_Bay']

test=LD.bukitPanjangToExpo_s6edge
test2=bukitPanjangToExpo_iphone12pro

"""#Exploratory Data Analysis"""

bukitPanjangToExpo_s6edge=datapreparation(bukitPanjangToExpo_s6edge, '2020-12-25 09:17:00.000','2020-12-25 10:23:51.000', resize=15, neednormalizepressure = True)
bukitPanjangToExpo_iphone12pro=datapreparation(bukitPanjangToExpo_iphone12pro,'2020-12-25 09:16:50.000','2020-12-25 10:26:19.000',resize=1, neednormalizepressure = False)
woodlandNorthToWoodlandSouth_s6edge=datapreparation(woodlandNorthToWoodlandSouth_s6edge, '2020-12-25 08:23:27.000','2020-12-25 08:30:00.000', resize=9, neednormalizepressure = True)
woodlandNorthToWoodlandSouth_iphone12pro=datapreparation(woodlandNorthToWoodlandSouth_iphone12pro, '2020-12-25 08:23:01.000','2020-12-25 08:30:00.000',resize=1, neednormalizepressure = False)
harbourFrontToPunggol_s6edge=datapreparation(harbourFrontToPunggol_s6edge, '2021-01-09 09:40:04.000','2021-01-09 10:16:05.000', resize=14, neednormalizepressure = True)
harbourFrontToPunggol_iphone12pro=datapreparation(harbourFrontToPunggol_iphone12pro,'2020-12-19 02:35:00.000','2020-12-19 03:11:00.000',resize=1, neednormalizepressure = False) 
harbourfrontToDhobyGhautToMarinaBay_s6edge=datapreparation(harbourfrontToDhobyGhautToMarinaBay_s6edge, '2021-01-09 07:45:08.000','2021-01-09 09:17:00.000', resize=17, neednormalizepressure = True)
harbourfrontToDhobyGhautToMarinaBay_iphone11=datapreparation(harbourfrontToDhobyGhautToMarinaBay_iphone11, '2020-12-18 08:39:49.000','2020-12-18 10:10:30.000',resize=1, neednormalizepressure = False)

bukitPanjangToExpo_s6edge

bukitPanjangToExpo_iphone12pro

woodlandNorthToWoodlandSouth_s6edge

woodlandNorthToWoodlandSouth_iphone12pro

harbourFrontToPunggol_s6edge

harbourFrontToPunggol_iphone12pro

harbourfrontToDhobyGhautToMarinaBay_s6edge

harbourfrontToDhobyGhautToMarinaBay_iphone11

"""# Summary Statistics"""

bukitPanjangToExpo_s6edge.describe()

bukitPanjangToExpo_iphone12pro.describe()

woodlandNorthToWoodlandSouth_s6edge.describe()

woodlandNorthToWoodlandSouth_iphone12pro.describe()

harbourFrontToPunggol_s6edge.describe()

harbourFrontToPunggol_iphone12pro.describe()

harbourfrontToDhobyGhautToMarinaBay_s6edge.describe()

harbourfrontToDhobyGhautToMarinaBay_iphone11.describe()

"""# Data Visualisation"""

visualisation(bukitPanjangToExpo_s6edge,bukitPanjangToExpo_iphone12pro,'Downtown line on S6 Edge and iPhone 12 Pro')

visualisation(woodlandNorthToWoodlandSouth_s6edge,woodlandNorthToWoodlandSouth_iphone12pro,'Thomsom-East Coast Line (Brown) on S6 Edge and iPhone 12 Pro')

visualisation(harbourFrontToPunggol_s6edge,harbourFrontToPunggol_iphone12pro,'North-east line (purple) on S6 Edge and iPhone 12 Pro')

visualisation(harbourfrontToDhobyGhautToMarinaBay_s6edge,harbourfrontToDhobyGhautToMarinaBay_iphone11,'Circle Line on S6 Edge and iPhone 11')

"""#Visualisation of all variables

## Downtown Line
"""

totalvisualization(bukitPanjangToExpo_s6edge)

totalvisualization(bukitPanjangToExpo_iphone12pro)

"""## Thomson-East Coast Line"""

totalvisualization(woodlandNorthToWoodlandSouth_s6edge)

totalvisualization(woodlandNorthToWoodlandSouth_iphone12pro)

"""## North-East Line"""

totalvisualization(harbourFrontToPunggol_s6edge)

totalvisualization(harbourFrontToPunggol_iphone12pro)

"""## Circle Line"""

totalvisualization(harbourfrontToDhobyGhautToMarinaBay_s6edge)

totalvisualization(harbourfrontToDhobyGhautToMarinaBay_iphone11)

"""#Appending stations

## Demo of functions
"""

DT_iphone12pro_temp = errorRemovingPipeline(bukitPanjangToExpo_iphone12pro)

"""# Clustering"""



"""# Silhouette Scores
The silhouette ranges from âˆ’1 to +1, where a high value indicates that the object is well matched to its own cluster and poorly matched to neighboring clusters. If most objects have a high value, then the clustering configuration is appropriate. If many points have a low or negative value, then the clustering configuration may have too many or too few clusters.
"""

